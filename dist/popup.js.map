{
  "version": 3,
  "sources": ["../node_modules/loglevel/lib/loglevel.js", "../src/log.ts", "../src/api.ts", "../src/utilities.ts", "../src/rating.ts", "../src/login.ts", "../src/injected_script.ts", "../src/popup.ts"],
  "sourcesContent": ["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      defaultLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = level;\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          self.setLevel(defaultLevel, false);\n          clearPersistedLevel();\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n", "import loglevel from 'loglevel'\n\n// Currently, biasing toward more logging, because of issues with Safari\nloglevel.setLevel('debug')\n\n// if (process.env.NODE_ENV === 'production') {\n//   loglevel.setLevel('warn')\n// } else {\n//   loglevel.setLevel('debug')\n// }\n\nexport default loglevel\n", "// import log from './log' // eslint-disable-line\n\nconst requestProps = (authToken = false, extraProps = {}) => {\n  const headers = { 'Content-Type': 'application/json' }\n  if (authToken) {\n    // @ts-expect-error TS(2339): Property 'Authorization' does not exist on type '{... Remove this comment to see the full error message\n    headers.Authorization = `Bearer ${authToken}`\n  }\n\n  const defaultProps = {\n    method: 'POST', // because default to some method\n    async: true,\n    headers: headers,\n    contentType: 'json'\n  }\n  return { ...defaultProps, ...extraProps }\n}\n\n// Returns true/false\nconst isAuthTokenValid = (authUrl: any, authToken: any) => new Promise((resolve, reject) => {\n  const authStatusUrl = `${authUrl}/status`\n\n  return fetch(authStatusUrl, requestProps(authToken, { method: 'GET' }))\n    .then(response => response.json()\n      .then((json) => {\n        resolve(json.message !== 'missing user' && response.status === 200)\n      })\n    ).catch((e) => {\n      resolve(errorResponse(e))\n    })\n})\n\nconst getAuthToken = (authUrl: any, loginFormData: any) => new Promise((resolve, reject) => {\n  const rProps = {\n    method: 'POST',\n    async: true,\n    headers: { 'Content-Type': 'application/json' },\n    contentType: 'json',\n    body: loginFormData\n  }\n  return fetch(authUrl, rProps)\n    .then(response => response.json()\n      .then((json) => {\n        let result = {}\n        if (response.status !== 200 || typeof (json.review_token) === 'undefined' || json.review_token === null) {\n          // @ts-expect-error TS(2339): Property 'message' does not exist on type '{}'.\n          result.message = ['error', json.message]\n        } else {\n          result = { authToken: json.review_token, currentName: json.name, message: ['success', 'authenticated'] }\n        }\n        resolve(result)\n      })\n    ).catch((e) => {\n      resolve(errorResponse(e))\n    })\n})\n\nconst submitRating = (ratingUrl: any, authToken: any, ratingFormData: any) => new Promise((resolve, reject) => {\n  const rProps = requestProps(authToken, { body: ratingFormData })\n\n  return fetch(ratingUrl, rProps)\n    .then(response => response.json()\n      .then((json) => {\n        if (response.status === 200) {\n          resolve({\n            success: true,\n            message: ['success', json.message],\n            share: json.share\n          })\n        } else {\n          resolve({ success: false, message: ['error', json.message] })\n        }\n      })\n    ).catch((e) => {\n      resolve(errorResponse(e))\n    })\n})\n\n// Just return an error message that includes the error\nconst errorResponse = (e: any) => {\n  return { success: false, message: ['error', `Error: ${e})`] }\n}\n\nexport default {\n  getAuthToken,\n  isAuthTokenValid,\n  requestProps, // Only exported for testing\n  submitRating\n}\n", "import log from './log' // eslint-disable-line\n\n// pause and rerun if DOM hasn't loaded\nconst retryIfMissing = (obj: any, func: any, ...args: any[]) => {\n  if (typeof (obj) === 'undefined' || obj === null) {\n    log.debug(`${func.name} requires an element not present in DOM, trying again in 50ms`)\n    setTimeout(func, 50, ...args)\n    return true\n  }\n}\n\n// @ts-expect-error TS(2580): Cannot find name 'process'. Do you need to install... Remove this comment to see the full error message\nconst baseUrl = process.env.baseUrl\n\n// Add a visual cue to show that you're attached to local\nconst renderLocalAlert = () => {\n  // If alert is already rendered, skip\n  if (document.getElementById('local-alert')) { return }\n  if (baseUrl.match(/http:\\/\\/localhost/i)) {\n    const localAlert = document.createElement('div')\n    localAlert.textContent = 'local convus'\n    localAlert.classList.add('text-gray-400', 'text-center')\n    localAlert.setAttribute('id', 'local-alert')\n    // @ts-expect-error TS(2531): Object is possibly 'null'.\n    document.getElementById('body-popup').append(localAlert)\n  }\n}\n\nconst pageLoadedFunctions = () => {\n  renderLocalAlert() // Render local alert if it's warranted\n}\n\n// Internal\nconst elementsFromSelectorOrElements = (selOrEl: any) => {\n  if (typeof (selOrEl) === 'string') {\n    return document.querySelectorAll(selOrEl)\n  } else {\n    // @ts-expect-error TS(2550): Property 'flat' does not exist on type 'any[]'. Do... Remove this comment to see the full error message\n    return [selOrEl].flat()\n  }\n}\n\nconst elementsHide = (selOrEl: any) => {\n  elementsFromSelectorOrElements(selOrEl)\n    .forEach((el: any) => el.classList.add('hidden'))\n}\n\nconst elementsShow = (selOrEl: any) => {\n  elementsFromSelectorOrElements(selOrEl)\n    .forEach((el: any) => el.classList.remove('hidden'))\n}\n\n// toggle can be: [true, 'hide', 'show']\nconst elementsCollapse = (selOrEl: any, toggle = true) => {\n  const els = elementsFromSelectorOrElements(selOrEl)\n  // log.trace(`toggling: ${toggle}`)\n  // If toggling, determine which direction to toggle\n  if (toggle === true) {\n    // @ts-expect-error TS(2322): Type 'string' is not assignable to type 'boolean'.\n    toggle = els[0]?.classList.contains('hidden') ? 'show' : 'hide'\n  }\n  // TODO: add animation functionality\n  // @ts-expect-error TS(2367): This condition will always return 'false' since th... Remove this comment to see the full error message\n  if (toggle === 'show') {\n    els.forEach((el: any) => el.classList.remove('hidden'))\n  } else {\n    els.forEach((el: any) => el.classList.add('hidden'))\n  }\n}\n\nconst hideAlerts = () => {\n  // TODO: switch to (and test):\n  // elementsHide('.alert, .shareVisible')\n  const visibleAlerts = document.querySelectorAll('.alert')\n  visibleAlerts.forEach(el => el.classList.add('hidden'))\n  const visibleShares = document.querySelectorAll('.shareVisible')\n  visibleShares.forEach(el => el.classList.add('hidden'))\n}\n\n// Internal\nconst copyShare = (event: any) => {\n  // Get the share wrapper\n  const el = event.target.closest('.shareVisible')\n  const shareText = el.getAttribute('data-sharetext')\n  // log.trace(`copyShare: ${shareText}`)\n  navigator.clipboard.writeText(shareText)\n  const copiedAlert = document.createElement('p')\n  copiedAlert.textContent = 'Copied results to clipboard'\n  copiedAlert.classList.add('text-center', 'px-2', 'py-2', 'mt-4')\n  el.append(copiedAlert)\n}\n\n// Internal\nconst shareDiv = (shareText: any) => {\n  const template = document.querySelector('#templates .shareTemplate')\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  const el = template.cloneNode(true)\n  // @ts-expect-error TS(2339): Property 'classList' does not exist on type 'Node'... Remove this comment to see the full error message\n  el.classList.remove('shareTemplate')\n  // @ts-expect-error TS(2339): Property 'classList' does not exist on type 'Node'... Remove this comment to see the full error message\n  el.classList.add('shareVisible')\n  // @ts-expect-error TS(2339): Property 'setAttribute' does not exist on type 'No... Remove this comment to see the full error message\n  el.setAttribute('data-sharetext', shareText)\n  // @ts-expect-error TS(2339): Property 'querySelector' does not exist on type 'N... Remove this comment to see the full error message\n  el.querySelector('.btnShare').addEventListener('click', copyShare)\n  return el\n}\n// Internal\nconst renderAlert = (kind: any, text: any, shareText: any) => {\n  const body = document.getElementById('body-popup')\n  const alert = document.createElement('div')\n  alert.textContent = text\n  alert.classList.add(`alert-${kind}`, 'alert', 'my-4')\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  body.prepend(alert)\n\n  if (typeof (shareText) !== 'undefined' && shareText !== null) {\n    alert.after(shareDiv(shareText))\n  }\n}\n\n// message is an array of: [kind, text]\nconst renderAlerts = (messages: any, shareText = null) => {\n  hideAlerts()\n  // Wrap messages if messages is just a single message\n  if (typeof (messages[0]) === 'string') { messages = [messages] }\n  messages.forEach((m: any) => renderAlert(m[0], m[1], shareText))\n}\n\n// toggle: [true, 'hide', 'show'] - matches elementsCollapse above\nconst toggleMenu = (event = false, toggle = true) => {\n  // @ts-expect-error TS(2339): Property 'preventDefault' does not exist on type '... Remove this comment to see the full error message\n  event && event.preventDefault()\n  const menuBtn = document.getElementById('rating-menu-btn')\n  const menu = document.getElementById('rating-menu')\n  // Choose toggle based on state of button, if toggling\n  if (toggle === true) {\n    // @ts-expect-error TS(2322): Type 'string' is not assignable to type 'boolean'.\n    toggle = menuBtn.classList.contains('active') ? 'hide' : 'show'\n  }\n  elementsCollapse(menu, toggle)\n\n  // @ts-expect-error TS(2367): This condition will always return 'false' since th... Remove this comment to see the full error message\n  if (toggle === 'hide') {\n    // @ts-expect-error TS(2531): Object is possibly 'null'.\n    menuBtn.classList.remove('active')\n  } else {\n    // @ts-expect-error TS(2531): Object is possibly 'null'.\n    menuBtn.classList.add('active')\n  }\n}\n\nexport default {\n  elementsCollapse,\n  elementsHide,\n  elementsShow,\n  hideAlerts,\n  pageLoadedFunctions,\n  renderAlerts,\n  retryIfMissing,\n  toggleMenu\n}\n", "import log from './log' // eslint-disable-line\nimport api from './api'\nimport utilities from './utilities'\nimport login from './login'\n\n// Internal\nconst formNewRatingUrl = () => document.getElementById('new_rating')?.getAttribute('action')\n\n// Internal\nconst handleRatingSubmit = async function (e: any) {\n  e.preventDefault()\n  const submitBtn = document.getElementById('ratingSubmitButton')\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  submitBtn.classList.add('disabled')\n  utilities.elementsShow('#rating-submit-spinner')\n  // @ts-expect-error TS(2345): Argument of type 'HTMLElement | null' is not assig... Remove this comment to see the full error message\n  const formData = new FormData(document.getElementById('new_rating'))\n  // @ts-expect-error TS(2550): Property 'fromEntries' does not exist on type 'Obj... Remove this comment to see the full error message\n  const jsonFormData = JSON.stringify(Object.fromEntries(formData))\n  // @ts-expect-error TS(2339): Property 'authToken' does not exist on type 'Windo... Remove this comment to see the full error message\n  const result = await api.submitRating(formNewRatingUrl(), window.authToken, jsonFormData)\n\n  log.debug(result)\n  // @ts-expect-error TS(2571): Object is of type 'unknown'.\n  utilities.renderAlerts(result.message, result.share)\n  // @ts-expect-error TS(2571): Object is of type 'unknown'.\n  if (result.success) {\n    // @ts-expect-error TS(2531): Object is possibly 'null'.\n    document.getElementById('new_rating').classList.add('hidden')\n    // @ts-expect-error TS(2345): Argument of type '\"hide\"' is not assignable to par... Remove this comment to see the full error message\n    utilities.toggleMenu(false, 'hide')\n  }\n  utilities.elementsHide('#rating-submit-spinner')\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  submitBtn.classList.remove('disabled')\n\n  return false // fallback prevent submit\n}\n\n// Internal\nconst updateMenuCheck = (event: any) => {\n  const el = event.target\n  const targetField = document.getElementById(el.getAttribute('data-target-id'))\n  // @ts-expect-error TS(2345): Argument of type '\"hide\" | \"show\"' is not assignab... Remove this comment to see the full error message\n  utilities.elementsCollapse(targetField, el.checked ? 'show' : 'hide')\n}\n\n// Internal\nconst ratingTime = () => {\n  log.trace('ratingTime')\n  const ratingForm = document.getElementById('new_rating')\n\n  if (utilities.retryIfMissing(ratingForm, ratingTime)) { return }\n\n  // I think it's a good thing to attach the event listener to the rating form\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  ratingForm.addEventListener('submit', handleRatingSubmit)\n  // Attach the menu functionality\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  document.getElementById('rating-menu-btn').addEventListener('click', utilities.toggleMenu)\n  document.querySelectorAll('#rating-menu .form-control-check input').forEach(el => el.addEventListener('change', updateMenuCheck))\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  document.getElementById('logout-btn').addEventListener('click', login.logout)\n\n  showRatingForm()\n  utilities.pageLoadedFunctions()\n}\n\nconst showRatingForm = () => {\n  log.trace('showRatingForm')\n  // Only show or hide the form if authToken is set, in case of weird callback stuff\n  // @ts-expect-error TS(2339): Property 'authToken' does not exist on type 'Windo... Remove this comment to see the full error message\n  if (window.authToken) {\n    // If we're on the auth page, don't do anything\n    if (login.isAuthUrl()) { return }\n    // Hide the spinners\n    utilities.elementsHide('.spinners, #whitespace-preserver')\n    // Render save and menu\n    utilities.elementsShow('#rating-save-row')\n    utilities.elementsShow('#new_rating')\n  }\n  // Nice to have username to keep track of what's going on\n  // @ts-expect-error TS(2339): Property 'currentName' does not exist on type 'Win... Remove this comment to see the full error message\n  if (window.currentName) {\n    // @ts-expect-error TS(2531): Object is possibly 'null'.\n    document.getElementById('username').textContent = window.currentName\n  }\n}\n\nconst updateRatingFields = (tabUrl: any, title: any) => {\n  log.trace('updateRatingFields')\n  const ratingUrlField = document.getElementById('submitted_url')\n  utilities.retryIfMissing(ratingUrlField, updateRatingFields, tabUrl, title)\n\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  ratingUrlField.value = tabUrl\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  document.getElementById('citation_title').value = title\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  document.getElementById('timezone').value = Intl.DateTimeFormat().resolvedOptions().timeZone\n  ratingTime()\n}\n\nconst addMetadata = (metadata: any) => {\n  log.debug(`addMetadata, metadata length: ${metadata?.length}`)\n  const citationMetadataField = document.getElementById('citation_metadata_str')\n  utilities.retryIfMissing(citationMetadataField, addMetadata, metadata)\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  citationMetadataField.value = JSON.stringify(metadata)\n}\n\nexport default {\n  addMetadata,\n  showRatingForm,\n  updateRatingFields\n}\n", "import log from './log' // eslint-disable-line\nimport api from './api'\n// TODO: only import isAuthTokenValid\nimport rating from './rating'\nimport utilities from './utilities'\n\n// Internal\n// @ts-expect-error TS(2580): Cannot find name 'process'. Do you need to install... Remove this comment to see the full error message\nconst baseUrl = process.env.baseUrl\nconst formAuthUrl = baseUrl + '/api/v1/auth'\nconst authUrl = baseUrl + '/browser_extension_auth'\n\n// Internal\nconst storeAuthData = (authToken: any, currentName: any) => {\n  // TODO: ^ there has to be a better way to handle passing the arguments\n  // ... Destructuring assignment was causing issues in Safari\n  // @ts-expect-error TS(2304): Cannot find name 'browser'.\n  browser.storage.local.set({ authToken: authToken, currentName: currentName })\n  // @ts-expect-error TS(2339): Property 'authToken' does not exist on type 'Windo... Remove this comment to see the full error message\n  window.authToken = authToken\n  // @ts-expect-error TS(2339): Property 'currentName' does not exist on type 'Win... Remove this comment to see the full error message\n  window.currentName = currentName\n}\n\n// Internal\nconst handleFallbackLoginSubmit = async function (e: any) {\n  e.preventDefault()\n  // @ts-expect-error TS(2345): Argument of type 'HTMLElement | null' is not assig... Remove this comment to see the full error message\n  const formData = new FormData(document.getElementById('new_user'))\n  // @ts-expect-error TS(2550): Property 'fromEntries' does not exist on type 'Obj... Remove this comment to see the full error message\n  const jsonFormData = JSON.stringify(Object.fromEntries(formData))\n\n  const result = await api.getAuthToken(formAuthUrl, jsonFormData)\n  log.debug(result)\n  // @ts-expect-error TS(2571): Object is of type 'unknown'.\n  if (typeof (result.authToken) === 'undefined' || result.authToken === null) {\n    // @ts-expect-error TS(2571): Object is of type 'unknown'.\n    utilities.renderAlerts(result.message)\n  } else {\n    // @ts-expect-error TS(2571): Object is of type 'unknown'.\n    storeAuthData(result.authToken, result.currentName)\n    utilities.hideAlerts()\n    if (isAuthUrl()) {\n      utilities.elementsCollapse('#new_user')\n      utilities.renderAlerts([['success', 'Logged in!']])\n    } else {\n      rating.showRatingForm()\n    }\n  }\n  return false // fallback prevent submit\n}\n\n// Internal\nconst countdownAndClose = (selector: any, ms: any, closeFunc = false) => {\n  let secondsLeft = ms / 1000\n  const countdownEl = document.querySelector(selector)\n  countdownEl.textContent = secondsLeft // Set the initial time\n  const countdownTimer = setInterval(function () {\n    countdownEl.textContent = secondsLeft -= 1\n    if (secondsLeft <= 0) { clearInterval(countdownTimer) }\n  }, 1000)\n  // Run special close function\n  // @ts-expect-error TS(2345): Argument of type 'boolean' is not assignable to pa... Remove this comment to see the full error message\n  if (closeFunc) { setTimeout(closeFunc, ms) }\n  // Firefox doesn't close the popup on when the tab is closed - so, always close the popup\n  setTimeout(window.close, ms)\n}\n\n// Internal\nconst removeAuthData = () => {\n  // @ts-expect-error TS(2304): Cannot find name 'browser'.\n  browser.storage.local.remove('authToken')\n  // @ts-expect-error TS(2304): Cannot find name 'browser'.\n  browser.storage.local.remove('currentName')\n  // @ts-expect-error TS(2339): Property 'authToken' does not exist on type 'Windo... Remove this comment to see the full error message\n  window.authToken = undefined\n}\n\n// @ts-expect-error TS(2339): Property 'currentUrl' does not exist on type 'Wind... Remove this comment to see the full error message\nconst isAuthUrl = (url = null) => authUrl === (url || window.currentUrl)\n\nconst isSignInOrUpUrl = (url = null) => {\n  // @ts-expect-error TS(2339): Property 'currentUrl' does not exist on type 'Wind... Remove this comment to see the full error message\n  url ||= window.currentUrl\n  // These are the URLs the user is sent to if they aren't signed signed in to Convus\n  // when they try to login to the extension\n  return (`${baseUrl}/users/sign_in` === url) || (`${baseUrl}/users/sign_up` === url)\n}\n\nconst checkAuthToken = async function (token: any) {\n  if (utilities.retryIfMissing(formAuthUrl, checkAuthToken, token)) { return }\n\n  const result = await api.isAuthTokenValid(formAuthUrl, token)\n  log.trace('auth token check success:', result)\n  if (result) {\n    rating.showRatingForm()\n    return\n  }\n  // Remove the existing data that is incorrect - maybe actually do in form submit?\n  removeAuthData()\n  loginTime()\n}\n\nconst loginFromAuthPageData = (authToken: any, currentName: any) => {\n  log.trace(`loginFromAuthPageData - authToken: ${authToken}, ${currentName}`)\n  utilities.hideAlerts()\n  storeAuthData(authToken, currentName)\n  // in case we're already showing the \"sign in to auth\" message\n  utilities.elementsHide('.spinners, #new_rating, #whitespace-preserver, #sign_in_message')\n  utilities.elementsShow('#auth_message_in')\n\n  // @ts-expect-error TS(2339): Property 'closeTabFunction' does not exist on type... Remove this comment to see the full error message\n  window.closeTabFunction = (event = false) => {\n    // @ts-expect-error TS(2339): Property 'preventDefault' does not exist on type '... Remove this comment to see the full error message\n    event && event.preventDefault()\n    // @ts-expect-error TS(2304): Cannot find name 'chrome'.\n    chrome.tabs.remove(window.tabId)\n  }\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  document.getElementById('closeTabLink').addEventListener('click', window.closeTabFunction)\n  // @ts-expect-error TS(2339): Property 'closeTabFunction' does not exist on type... Remove this comment to see the full error message\n  countdownAndClose('#in_countdown', 3000, window.closeTabFunction)\n}\n\nconst loginTime = () => {\n  log.trace('loginTime')\n  // If we're on the auth page, exit\n  if (isAuthUrl()) { return }\n  // If doing fallback login, do that :(\n  // @ts-expect-error TS(2339): Property 'fallbackLogin' does not exist on type 'W... Remove this comment to see the full error message\n  if (window.fallbackLogin) { return }\n  const loginMessage = document.getElementById('sign_in_message')\n  if (utilities.retryIfMissing(loginMessage, loginTime)) { return }\n  // If the user is signing in or signing up on Convus, show text rather than a button which opens another tab\n  if (isSignInOrUpUrl()) {\n    log.debug('sign in page!!!')\n    // @ts-expect-error TS(2531): Object is possibly 'null'.\n    document.querySelector('#sign_in_message p').textContent = 'Sign in to Convus on this page'\n  }\n  utilities.elementsHide('.spinners, #new_rating, #whitespace-preserver')\n  utilities.elementsShow(loginMessage)\n  utilities.pageLoadedFunctions()\n\n  // In Firefox, the popup stays around after you click the signIn button\n  // Ideally, this would call getCurrentTab, but I couldn't figure out how, so just closing\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  document.getElementById('signInBtn').addEventListener('click', () => {\n    setTimeout(window.close, 100)\n  })\n}\n\n// This shows the login form - it should only happen if the browser extension can't parse the page,\n// which happens in older versions of safari\nconst fallbackLoginTime = () => {\n  log.debug('fallbacklogintime - UNABLE TO PARSE THE PAGE, probably Safari BS')\n  // @ts-expect-error TS(2339): Property 'fallbackLogin' does not exist on type 'W... Remove this comment to see the full error message\n  window.fallbackLogin = true\n  const loginForm = document.getElementById('new_user')\n  if (utilities.retryIfMissing(loginForm, loginTime)) { return }\n\n  utilities.elementsHide('#new_rating, .spinners, #whitespace-preserver, #sign_in_message')\n  utilities.elementsShow(loginForm)\n  // @ts-expect-error TS(2531): Object is possibly 'null'.\n  loginForm.addEventListener('submit', handleFallbackLoginSubmit)\n}\n\nconst logout = () => {\n  removeAuthData()\n  // @ts-expect-error TS(2345): Argument of type '\"hide\"' is not assignable to par... Remove this comment to see the full error message\n  utilities.toggleMenu(false, 'hide')\n\n  utilities.elementsHide('#new_rating')\n  utilities.elementsShow('#auth_message_out')\n  countdownAndClose('#out_countdown', 5000)\n}\n\nexport default {\n  loginFromAuthPageData,\n  checkAuthToken,\n  fallbackLoginTime,\n  isAuthUrl,\n  isSignInOrUpUrl,\n  loginTime,\n  logout\n}\n", "export default function injectedScript () {\n  // @ts-expect-error TS(2580): Cannot find name 'process'. Do you need to install... Remove this comment to see the full error message\n  const authUrl = process.env.baseUrl + '/browser_extension_auth'\n\n  console.log('Convus extension is getting the page metadata!')\n\n  // If on the extension auth URL, we only care about the two auth meta fields\n  if (authUrl === window.location.href) {\n    const authData = {\n      // @ts-expect-error TS(2339): Property 'content' does not exist on type 'Element... Remove this comment to see the full error message\n      currentName: document.querySelector('meta[name=\"ext-username\"]')?.content,\n      // @ts-expect-error TS(2339): Property 'content' does not exist on type 'Element... Remove this comment to see the full error message\n      authToken: document.querySelector('meta[name=\"ext-token\"]')?.content\n    }\n    return authData\n  }\n  // Convert an Attr to a [name, value] pair\n  const attrToPair = (attr: any) => [attr.name, attr.value]\n  // Convert an element to an object of its attributes, {key: value, ...}.\n  // @ts-expect-error TS(2550): Property 'fromEntries' does not exist on type 'Obj... Remove this comment to see the full error message\n  const elToAttrs = (el: any) => Object.fromEntries(Array.from(el.attributes).map(attrToPair))\n  // Convert an iterable of elements to a list of element attributes\n  const elsToAttrs = (els: any) => Array.from(els).map(elToAttrs)\n  // Count the total words on the page\n  const countWords = (str: any) => str?.trim()?.split(/\\s+/)?.length || 0\n  // Grab the JSON-LD data from the script elements, without parsing it\n  // @ts-expect-error TS(2571): Object is of type 'unknown'.\n  const jsonLdString = (scriptEls: any) => Array.from(scriptEls).map((i) => i.innerText.trim())\n\n  let metadataAttrs = elsToAttrs(document.getElementsByTagName('meta'))\n\n  // Add jsonLD - don't parse here, in case malformed\n  const jsonLD = jsonLdString(document.querySelectorAll('script[type=\"application/ld+json\"]'))\n  if (jsonLD.length) {\n    metadataAttrs = [...metadataAttrs, ...[{ json_ld: jsonLD }]]\n  }\n\n  // Calculate wordCount\n  const commentsEl = document.querySelector('.comment-list-container') || document.querySelector('.comment-list') || document.querySelector('.commentlist')\n  // Subtract comment words from the total\n  // @ts-expect-error TS(2339): Property 'innerText' does not exist on type 'Eleme... Remove this comment to see the full error message\n  const wordCount = { word_count: countWords(document.body.innerText) - countWords(commentsEl?.innerText) }\n\n  return metadataAttrs.concat([wordCount])\n}\n", "import log from './log' // eslint-disable-line\nimport login from './login'\nimport rating from './rating'\nimport injectedScript from './injected_script'\n// TODO: only import renderAlerts\nimport utilities from './utilities'\n\n// instantiating these outside functions prevents a periodic \"process is undefined\" bug\n// @ts-expect-error TS(2580): Cannot find name 'process'. Do you need to install... Remove this comment to see the full error message\nconst browserTarget = process.env.browser_target\nconst safariType = !!browserTarget.match('safari') // match safari and safari_ios\n\n// Oh Chrome, it would be great if you used `browser` instead of `chrome`\n// @ts-expect-error TS(2304): Cannot find name 'browser'.\nif (browserTarget == 'chrome') { browser = chrome } // eslint-disable-line\n\n// @ts-expect-error TS(2304): Cannot find name 'browser'.\nbrowser.storage.local.get(['authToken', 'currentName'])\n  .then((data: any) => {\n    if (typeof (data.authToken) === 'undefined' || data.authToken === null) {\n      log.debug(`missing auth!   authToken: ${data.authToken} and currentName: ${data.currentName}`)\n      login.loginTime()\n    } else {\n      log.trace('auth present')\n      // @ts-expect-error TS(2339): Property 'authToken' does not exist on type 'Windo... Remove this comment to see the full error message\n      window.authToken = data.authToken\n      // @ts-expect-error TS(2339): Property 'currentName' does not exist on type 'Win... Remove this comment to see the full error message\n      window.currentName = data.currentName\n      login.checkAuthToken(data.authToken)\n    }\n  })\n\nconst handlePageData = (response: any, isAuthUrl: any) => {\n  log.debug('Script response: ', response)\n\n  const result = safariType ? response[0] : response[0]?.result\n  log.warn(`result: ${JSON.stringify(result)}`)\n  if (isAuthUrl) {\n    // @ts-expect-error TS(2339): Property 'currentUrl' does not exist on type 'Wind... Remove this comment to see the full error message\n    log.trace(`authUrl?: ${isAuthUrl}    ${window.currentUrl}`)\n    login.loginFromAuthPageData(result.authToken, result.currentName)\n  } else {\n    rating.addMetadata(result)\n  }\n}\n\nconst injectScript = async function (tabId: any, isAuthUrl: any) {\n  // @ts-expect-error TS(2304): Cannot find name 'browser'.\n  await browser.scripting.executeScript({\n    target: { tabId: tabId },\n    func: injectedScript\n  })\n    .then((response: any) => {\n      try {\n        handlePageData(response, isAuthUrl)\n      } catch (e) {\n        log.debug(e)\n        let alert = [['warning', 'Unable to parse the page.']]\n        if (safariType) {\n          alert = [['error', 'Please upgrade to the most recent version Safari']]\n        }\n        utilities.renderAlerts(alert)\n        // If there isn't an auth token, show login form\n        // @ts-expect-error TS(2339): Property 'authToken' does not exist on type 'Windo... Remove this comment to see the full error message\n        if (!window.authToken) { login.fallbackLoginTime() }\n      }\n    })\n}\n\nconst getCurrentTab = async function () {\n  // @ts-expect-error TS(2304): Cannot find name 'browser'.\n  const [tab] = await browser.tabs.query({ active: true, currentWindow: true })\n  log.trace(tab)\n\n  // Assign these things to window so they can be accessed other places\n  // @ts-expect-error TS(2339): Property 'currentUrl' does not exist on type 'Wind... Remove this comment to see the full error message\n  window.currentUrl = tab.url\n  // @ts-expect-error TS(2339): Property 'currentUrl' does not exist on type 'Wind... Remove this comment to see the full error message\n  const isAuthUrl = login.isAuthUrl(window.currentUrl)\n  // @ts-expect-error TS(2339): Property 'tabId' does not exist on type 'Window & ... Remove this comment to see the full error message\n  window.tabId = tab.id\n\n  // @ts-expect-error TS(2339): Property 'currentUrl' does not exist on type 'Wind... Remove this comment to see the full error message\n  if (login.isSignInOrUpUrl(window.currentUrl)) {\n    // If the user is signing in/up to Convus, don't inject a script\n    log.debug('Viewing Convus sign in or up')\n    return\n  } else if (!isAuthUrl) {\n    // Update rating fields that we have info for, the metadata can be added later\n    // @ts-expect-error TS(2339): Property 'currentUrl' does not exist on type 'Wind... Remove this comment to see the full error message\n    rating.updateRatingFields(window.currentUrl, tab.title)\n  }\n  // @ts-expect-error TS(2339): Property 'tabId' does not exist on type 'Window & ... Remove this comment to see the full error message\n  injectScript(window.tabId, isAuthUrl)\n}\n\ngetCurrentTab()\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAMA,OAAC,SAAU,MAAM,YAAY;AACzB;AACA,YAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC5C,iBAAO,UAAU;AAAA,QACrB,WAAW,OAAO,WAAW,YAAY,OAAO,SAAS;AACrD,iBAAO,UAAU,WAAW;AAAA,QAChC,OAAO;AACH,eAAK,MAAM,WAAW;AAAA,QAC1B;AAAA,MACJ,GAAE,SAAM,WAAY;AAChB;AAGA,YAAI,OAAO,WAAW;AAAA,QAAC;AACvB,YAAI,gBAAgB;AACpB,YAAI,OAAQ,OAAO,WAAW,iBAAmB,OAAO,OAAO,cAAc,iBACzE,kBAAkB,KAAK,OAAO,UAAU,SAAS;AAGrD,YAAI,aAAa;AAAA,UACb;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AAGA,iBAAS,WAAW,KAAK,YAAY;AACjC,cAAI,SAAS,IAAI;AACjB,cAAI,OAAO,OAAO,SAAS,YAAY;AACnC,mBAAO,OAAO,KAAK,GAAG;AAAA,UAC1B,OAAO;AACH,gBAAI;AACA,qBAAO,SAAS,UAAU,KAAK,KAAK,QAAQ,GAAG;AAAA,YACnD,SAAS,GAAP;AAEE,qBAAO,WAAW;AACd,uBAAO,SAAS,UAAU,MAAM,MAAM,QAAQ,CAAC,KAAK,SAAS,CAAC;AAAA,cAClE;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAGA,iBAAS,aAAa;AAClB,cAAI,QAAQ,KAAK;AACb,gBAAI,QAAQ,IAAI,OAAO;AACnB,sBAAQ,IAAI,MAAM,SAAS,SAAS;AAAA,YACxC,OAAO;AAEH,uBAAS,UAAU,MAAM,MAAM,QAAQ,KAAK,CAAC,SAAS,SAAS,CAAC;AAAA,YACpE;AAAA,UACJ;AACA,cAAI,QAAQ;AAAO,oBAAQ,MAAM;AAAA,QACrC;AAIA,iBAAS,WAAW,YAAY;AAC5B,cAAI,eAAe,SAAS;AACxB,yBAAa;AAAA,UACjB;AAEA,cAAI,OAAO,YAAY,eAAe;AAClC,mBAAO;AAAA,UACX,WAAW,eAAe,WAAW,MAAM;AACvC,mBAAO;AAAA,UACX,WAAW,QAAQ,gBAAgB,QAAW;AAC1C,mBAAO,WAAW,SAAS,UAAU;AAAA,UACzC,WAAW,QAAQ,QAAQ,QAAW;AAClC,mBAAO,WAAW,SAAS,KAAK;AAAA,UACpC,OAAO;AACH,mBAAO;AAAA,UACX;AAAA,QACJ;AAIA,iBAAS,sBAAsB,OAAO,YAAY;AAE9C,mBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACxC,gBAAI,aAAa,WAAW;AAC5B,iBAAK,cAAe,IAAI,QACpB,OACA,KAAK,cAAc,YAAY,OAAO,UAAU;AAAA,UACxD;AAGA,eAAK,MAAM,KAAK;AAAA,QACpB;AAIA,iBAAS,gCAAgC,YAAY,OAAO,YAAY;AACpE,iBAAO,WAAY;AACf,gBAAI,OAAO,YAAY,eAAe;AAClC,oCAAsB,KAAK,MAAM,OAAO,UAAU;AAClD,mBAAK,YAAY,MAAM,MAAM,SAAS;AAAA,YAC1C;AAAA,UACJ;AAAA,QACJ;AAIA,iBAAS,qBAAqB,YAAY,OAAO,YAAY;AAEzD,iBAAO,WAAW,UAAU,KACrB,gCAAgC,MAAM,MAAM,SAAS;AAAA,QAChE;AAEA,iBAAS,OAAO,MAAM,cAAc,SAAS;AAC3C,cAAI,OAAO;AACX,cAAI;AACJ,yBAAe,gBAAgB,OAAO,SAAS;AAE/C,cAAI,aAAa;AACjB,cAAI,OAAO,SAAS,UAAU;AAC5B,0BAAc,MAAM;AAAA,UACtB,WAAW,OAAO,SAAS,UAAU;AACnC,yBAAa;AAAA,UACf;AAEA,mBAAS,uBAAuB,UAAU;AACtC,gBAAI,aAAa,WAAW,aAAa,UAAU,YAAY;AAE/D,gBAAI,OAAO,WAAW,iBAAiB,CAAC;AAAY;AAGpD,gBAAI;AACA,qBAAO,aAAa,cAAc;AAClC;AAAA,YACJ,SAAS,QAAP;AAAA,YAAgB;AAGlB,gBAAI;AACA,qBAAO,SAAS,SACd,mBAAmB,UAAU,IAAI,MAAM,YAAY;AAAA,YACzD,SAAS,QAAP;AAAA,YAAgB;AAAA,UACtB;AAEA,mBAAS,oBAAoB;AACzB,gBAAI;AAEJ,gBAAI,OAAO,WAAW,iBAAiB,CAAC;AAAY;AAEpD,gBAAI;AACA,4BAAc,OAAO,aAAa;AAAA,YACtC,SAAS,QAAP;AAAA,YAAgB;AAGlB,gBAAI,OAAO,gBAAgB,eAAe;AACtC,kBAAI;AACA,oBAAI,SAAS,OAAO,SAAS;AAC7B,oBAAI,WAAW,OAAO;AAAA,kBAClB,mBAAmB,UAAU,IAAI;AAAA,gBAAG;AACxC,oBAAI,aAAa,IAAI;AACjB,gCAAc,WAAW,KAAK,OAAO,MAAM,QAAQ,CAAC,EAAE;AAAA,gBAC1D;AAAA,cACJ,SAAS,QAAP;AAAA,cAAgB;AAAA,YACtB;AAGA,gBAAI,KAAK,OAAO,iBAAiB,QAAW;AACxC,4BAAc;AAAA,YAClB;AAEA,mBAAO;AAAA,UACX;AAEA,mBAAS,sBAAsB;AAC3B,gBAAI,OAAO,WAAW,iBAAiB,CAAC;AAAY;AAGpD,gBAAI;AACA,qBAAO,aAAa,WAAW,UAAU;AACzC;AAAA,YACJ,SAAS,QAAP;AAAA,YAAgB;AAGlB,gBAAI;AACA,qBAAO,SAAS,SACd,mBAAmB,UAAU,IAAI;AAAA,YACvC,SAAS,QAAP;AAAA,YAAgB;AAAA,UACtB;AAQA,eAAK,OAAO;AAEZ,eAAK,SAAS;AAAA,YAAE,SAAS;AAAA,YAAG,SAAS;AAAA,YAAG,QAAQ;AAAA,YAAG,QAAQ;AAAA,YACvD,SAAS;AAAA,YAAG,UAAU;AAAA,UAAC;AAE3B,eAAK,gBAAgB,WAAW;AAEhC,eAAK,WAAW,WAAY;AACxB,mBAAO;AAAA,UACX;AAEA,eAAK,WAAW,SAAU,OAAO,SAAS;AACtC,gBAAI,OAAO,UAAU,YAAY,KAAK,OAAO,MAAM,YAAY,OAAO,QAAW;AAC7E,sBAAQ,KAAK,OAAO,MAAM,YAAY;AAAA,YAC1C;AACA,gBAAI,OAAO,UAAU,YAAY,SAAS,KAAK,SAAS,KAAK,OAAO,QAAQ;AACxE,6BAAe;AACf,kBAAI,YAAY,OAAO;AACnB,uCAAuB,KAAK;AAAA,cAChC;AACA,oCAAsB,KAAK,MAAM,OAAO,IAAI;AAC5C,kBAAI,OAAO,YAAY,iBAAiB,QAAQ,KAAK,OAAO,QAAQ;AAChE,uBAAO;AAAA,cACX;AAAA,YACJ,OAAO;AACH,oBAAM,+CAA+C;AAAA,YACzD;AAAA,UACJ;AAEA,eAAK,kBAAkB,SAAU,OAAO;AACpC,2BAAe;AACf,gBAAI,CAAC,kBAAkB,GAAG;AACtB,mBAAK,SAAS,OAAO,KAAK;AAAA,YAC9B;AAAA,UACJ;AAEA,eAAK,aAAa,WAAY;AAC1B,iBAAK,SAAS,cAAc,KAAK;AACjC,gCAAoB;AAAA,UACxB;AAEA,eAAK,YAAY,SAAS,SAAS;AAC/B,iBAAK,SAAS,KAAK,OAAO,OAAO,OAAO;AAAA,UAC5C;AAEA,eAAK,aAAa,SAAS,SAAS;AAChC,iBAAK,SAAS,KAAK,OAAO,QAAQ,OAAO;AAAA,UAC7C;AAGA,cAAI,eAAe,kBAAkB;AACrC,cAAI,gBAAgB,MAAM;AACtB,2BAAe;AAAA,UACnB;AACA,eAAK,SAAS,cAAc,KAAK;AAAA,QACnC;AAQA,YAAI,gBAAgB,IAAI,OAAO;AAE/B,YAAI,iBAAiB,CAAC;AACtB,sBAAc,YAAY,SAAS,UAAU,MAAM;AAC/C,cAAK,OAAO,SAAS,YAAY,OAAO,SAAS,YAAa,SAAS,IAAI;AACzE,kBAAM,IAAI,UAAU,gDAAgD;AAAA,UACtE;AAEA,cAAI,SAAS,eAAe;AAC5B,cAAI,CAAC,QAAQ;AACX,qBAAS,eAAe,QAAQ,IAAI;AAAA,cAClC;AAAA,cAAM,cAAc,SAAS;AAAA,cAAG,cAAc;AAAA,YAAa;AAAA,UAC/D;AACA,iBAAO;AAAA,QACX;AAGA,YAAI,OAAQ,OAAO,WAAW,gBAAiB,OAAO,MAAM;AAC5D,sBAAc,aAAa,WAAW;AAClC,cAAI,OAAO,WAAW,iBACf,OAAO,QAAQ,eAAe;AACjC,mBAAO,MAAM;AAAA,UACjB;AAEA,iBAAO;AAAA,QACX;AAEA,sBAAc,aAAa,SAAS,aAAa;AAC7C,iBAAO;AAAA,QACX;AAGA,sBAAc,aAAa;AAE3B,eAAO;AAAA,MACX,CAAC;AAAA;AAAA;;;ACxSD,wBAAqB;AAGrB,kBAAAA,QAAS,SAAS,OAAO;AAQzB,MAAO,cAAQ,gBAAAA;;;ACTf,MAAM,eAAe,CAAC,YAAY,OAAO,aAAa,CAAC,MAAM;AAC3D,UAAM,UAAU,EAAE,gBAAgB,mBAAmB;AACrD,QAAI,WAAW;AAEb,cAAQ,gBAAgB,UAAU;AAAA,IACpC;AAEA,UAAM,eAAe;AAAA,MACnB,QAAQ;AAAA,MACR,OAAO;AAAA,MACP;AAAA,MACA,aAAa;AAAA,IACf;AACA,WAAO,kCAAK,eAAiB;AAAA,EAC/B;AAGA,MAAM,mBAAmB,CAACC,UAAc,cAAmB,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC1F,UAAM,gBAAgB,GAAGA;AAEzB,WAAO,MAAM,eAAe,aAAa,WAAW,EAAE,QAAQ,MAAM,CAAC,CAAC,EACnE;AAAA,MAAK,cAAY,SAAS,KAAK,EAC7B,KAAK,CAAC,SAAS;AACd,gBAAQ,KAAK,YAAY,kBAAkB,SAAS,WAAW,GAAG;AAAA,MACpE,CAAC;AAAA,IACH,EAAE,MAAM,CAAC,MAAM;AACb,cAAQ,cAAc,CAAC,CAAC;AAAA,IAC1B,CAAC;AAAA,EACL,CAAC;AAED,MAAM,eAAe,CAACA,UAAc,kBAAuB,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC1F,UAAM,SAAS;AAAA,MACb,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAC9C,aAAa;AAAA,MACb,MAAM;AAAA,IACR;AACA,WAAO,MAAMA,UAAS,MAAM,EACzB;AAAA,MAAK,cAAY,SAAS,KAAK,EAC7B,KAAK,CAAC,SAAS;AACd,YAAI,SAAS,CAAC;AACd,YAAI,SAAS,WAAW,OAAO,OAAQ,KAAK,iBAAkB,eAAe,KAAK,iBAAiB,MAAM;AAEvG,iBAAO,UAAU,CAAC,SAAS,KAAK,OAAO;AAAA,QACzC,OAAO;AACL,mBAAS,EAAE,WAAW,KAAK,cAAc,aAAa,KAAK,MAAM,SAAS,CAAC,WAAW,eAAe,EAAE;AAAA,QACzG;AACA,gBAAQ,MAAM;AAAA,MAChB,CAAC;AAAA,IACH,EAAE,MAAM,CAAC,MAAM;AACb,cAAQ,cAAc,CAAC,CAAC;AAAA,IAC1B,CAAC;AAAA,EACL,CAAC;AAED,MAAM,eAAe,CAAC,WAAgB,WAAgB,mBAAwB,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC7G,UAAM,SAAS,aAAa,WAAW,EAAE,MAAM,eAAe,CAAC;AAE/D,WAAO,MAAM,WAAW,MAAM,EAC3B;AAAA,MAAK,cAAY,SAAS,KAAK,EAC7B,KAAK,CAAC,SAAS;AACd,YAAI,SAAS,WAAW,KAAK;AAC3B,kBAAQ;AAAA,YACN,SAAS;AAAA,YACT,SAAS,CAAC,WAAW,KAAK,OAAO;AAAA,YACjC,OAAO,KAAK;AAAA,UACd,CAAC;AAAA,QACH,OAAO;AACL,kBAAQ,EAAE,SAAS,OAAO,SAAS,CAAC,SAAS,KAAK,OAAO,EAAE,CAAC;AAAA,QAC9D;AAAA,MACF,CAAC;AAAA,IACH,EAAE,MAAM,CAAC,MAAM;AACb,cAAQ,cAAc,CAAC,CAAC;AAAA,IAC1B,CAAC;AAAA,EACL,CAAC;AAGD,MAAM,gBAAgB,CAAC,MAAW;AAChC,WAAO,EAAE,SAAS,OAAO,SAAS,CAAC,SAAS,UAAU,IAAI,EAAE;AAAA,EAC9D;AAEA,MAAO,cAAQ;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;;;ACrFA,MAAM,iBAAiB,CAAC,KAAU,SAAc,SAAgB;AAC9D,QAAI,OAAQ,QAAS,eAAe,QAAQ,MAAM;AAChD,kBAAI,MAAM,GAAG,KAAK,mEAAmE;AACrF,iBAAW,MAAM,IAAI,GAAG,IAAI;AAC5B,aAAO;AAAA,IACT;AAAA,EACF;AAGA,MAAM,UAAU;AAGhB,MAAM,mBAAmB,MAAM;AAE7B,QAAI,SAAS,eAAe,aAAa,GAAG;AAAE;AAAA,IAAO;AACrD,QAAI,QAAQ,MAAM,qBAAqB,GAAG;AACxC,YAAM,aAAa,SAAS,cAAc,KAAK;AAC/C,iBAAW,cAAc;AACzB,iBAAW,UAAU,IAAI,iBAAiB,aAAa;AACvD,iBAAW,aAAa,MAAM,aAAa;AAE3C,eAAS,eAAe,YAAY,EAAE,OAAO,UAAU;AAAA,IACzD;AAAA,EACF;AAEA,MAAM,sBAAsB,MAAM;AAChC,qBAAiB;AAAA,EACnB;AAGA,MAAM,iCAAiC,CAAC,YAAiB;AACvD,QAAI,OAAQ,YAAa,UAAU;AACjC,aAAO,SAAS,iBAAiB,OAAO;AAAA,IAC1C,OAAO;AAEL,aAAO,CAAC,OAAO,EAAE,KAAK;AAAA,IACxB;AAAA,EACF;AAEA,MAAM,eAAe,CAAC,YAAiB;AACrC,mCAA+B,OAAO,EACnC,QAAQ,CAAC,OAAY,GAAG,UAAU,IAAI,QAAQ,CAAC;AAAA,EACpD;AAEA,MAAM,eAAe,CAAC,YAAiB;AACrC,mCAA+B,OAAO,EACnC,QAAQ,CAAC,OAAY,GAAG,UAAU,OAAO,QAAQ,CAAC;AAAA,EACvD;AAGA,MAAM,mBAAmB,CAAC,SAAc,SAAS,SAAS;AArD1D;AAsDE,UAAM,MAAM,+BAA+B,OAAO;AAGlD,QAAI,WAAW,MAAM;AAEnB,iBAAS,SAAI,OAAJ,mBAAQ,UAAU,SAAS,aAAY,SAAS;AAAA,IAC3D;AAGA,QAAI,WAAW,QAAQ;AACrB,UAAI,QAAQ,CAAC,OAAY,GAAG,UAAU,OAAO,QAAQ,CAAC;AAAA,IACxD,OAAO;AACL,UAAI,QAAQ,CAAC,OAAY,GAAG,UAAU,IAAI,QAAQ,CAAC;AAAA,IACrD;AAAA,EACF;AAEA,MAAM,aAAa,MAAM;AAGvB,UAAM,gBAAgB,SAAS,iBAAiB,QAAQ;AACxD,kBAAc,QAAQ,QAAM,GAAG,UAAU,IAAI,QAAQ,CAAC;AACtD,UAAM,gBAAgB,SAAS,iBAAiB,eAAe;AAC/D,kBAAc,QAAQ,QAAM,GAAG,UAAU,IAAI,QAAQ,CAAC;AAAA,EACxD;AAGA,MAAM,YAAY,CAAC,UAAe;AAEhC,UAAM,KAAK,MAAM,OAAO,QAAQ,eAAe;AAC/C,UAAM,YAAY,GAAG,aAAa,gBAAgB;AAElD,cAAU,UAAU,UAAU,SAAS;AACvC,UAAM,cAAc,SAAS,cAAc,GAAG;AAC9C,gBAAY,cAAc;AAC1B,gBAAY,UAAU,IAAI,eAAe,QAAQ,QAAQ,MAAM;AAC/D,OAAG,OAAO,WAAW;AAAA,EACvB;AAGA,MAAM,WAAW,CAAC,cAAmB;AACnC,UAAM,WAAW,SAAS,cAAc,2BAA2B;AAEnE,UAAM,KAAK,SAAS,UAAU,IAAI;AAElC,OAAG,UAAU,OAAO,eAAe;AAEnC,OAAG,UAAU,IAAI,cAAc;AAE/B,OAAG,aAAa,kBAAkB,SAAS;AAE3C,OAAG,cAAc,WAAW,EAAE,iBAAiB,SAAS,SAAS;AACjE,WAAO;AAAA,EACT;AAEA,MAAM,cAAc,CAAC,MAAW,MAAW,cAAmB;AAC5D,UAAM,OAAO,SAAS,eAAe,YAAY;AACjD,UAAM,QAAQ,SAAS,cAAc,KAAK;AAC1C,UAAM,cAAc;AACpB,UAAM,UAAU,IAAI,SAAS,QAAQ,SAAS,MAAM;AAEpD,SAAK,QAAQ,KAAK;AAElB,QAAI,OAAQ,cAAe,eAAe,cAAc,MAAM;AAC5D,YAAM,MAAM,SAAS,SAAS,CAAC;AAAA,IACjC;AAAA,EACF;AAGA,MAAM,eAAe,CAAC,UAAe,YAAY,SAAS;AACxD,eAAW;AAEX,QAAI,OAAQ,SAAS,OAAQ,UAAU;AAAE,iBAAW,CAAC,QAAQ;AAAA,IAAE;AAC/D,aAAS,QAAQ,CAAC,MAAW,YAAY,EAAE,IAAI,EAAE,IAAI,SAAS,CAAC;AAAA,EACjE;AAGA,MAAM,aAAa,CAAC,QAAQ,OAAO,SAAS,SAAS;AAEnD,aAAS,MAAM,eAAe;AAC9B,UAAM,UAAU,SAAS,eAAe,iBAAiB;AACzD,UAAM,OAAO,SAAS,eAAe,aAAa;AAElD,QAAI,WAAW,MAAM;AAEnB,eAAS,QAAQ,UAAU,SAAS,QAAQ,IAAI,SAAS;AAAA,IAC3D;AACA,qBAAiB,MAAM,MAAM;AAG7B,QAAI,WAAW,QAAQ;AAErB,cAAQ,UAAU,OAAO,QAAQ;AAAA,IACnC,OAAO;AAEL,cAAQ,UAAU,IAAI,QAAQ;AAAA,IAChC;AAAA,EACF;AAEA,MAAO,oBAAQ;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;;;AC3JA,MAAM,mBAAmB,MAAG;AAN5B;AAM+B,0BAAS,eAAe,YAAY,MAApC,mBAAuC,aAAa;AAAA;AAGnF,MAAM,qBAAqB,SAAgB,GAAQ;AAAA;AACjD,QAAE,eAAe;AACjB,YAAM,YAAY,SAAS,eAAe,oBAAoB;AAE9D,gBAAU,UAAU,IAAI,UAAU;AAClC,wBAAU,aAAa,wBAAwB;AAE/C,YAAM,WAAW,IAAI,SAAS,SAAS,eAAe,YAAY,CAAC;AAEnE,YAAM,eAAe,KAAK,UAAU,OAAO,YAAY,QAAQ,CAAC;AAEhE,YAAM,SAAS,MAAM,YAAI,aAAa,iBAAiB,GAAG,OAAO,WAAW,YAAY;AAExF,kBAAI,MAAM,MAAM;AAEhB,wBAAU,aAAa,OAAO,SAAS,OAAO,KAAK;AAEnD,UAAI,OAAO,SAAS;AAElB,iBAAS,eAAe,YAAY,EAAE,UAAU,IAAI,QAAQ;AAE5D,0BAAU,WAAW,OAAO,MAAM;AAAA,MACpC;AACA,wBAAU,aAAa,wBAAwB;AAE/C,gBAAU,UAAU,OAAO,UAAU;AAErC,aAAO;AAAA,IACT;AAAA;AAGA,MAAM,kBAAkB,CAAC,UAAe;AACtC,UAAM,KAAK,MAAM;AACjB,UAAM,cAAc,SAAS,eAAe,GAAG,aAAa,gBAAgB,CAAC;AAE7E,sBAAU,iBAAiB,aAAa,GAAG,UAAU,SAAS,MAAM;AAAA,EACtE;AAGA,MAAM,aAAa,MAAM;AACvB,gBAAI,MAAM,YAAY;AACtB,UAAM,aAAa,SAAS,eAAe,YAAY;AAEvD,QAAI,kBAAU,eAAe,YAAY,UAAU,GAAG;AAAE;AAAA,IAAO;AAI/D,eAAW,iBAAiB,UAAU,kBAAkB;AAGxD,aAAS,eAAe,iBAAiB,EAAE,iBAAiB,SAAS,kBAAU,UAAU;AACzF,aAAS,iBAAiB,wCAAwC,EAAE,QAAQ,QAAM,GAAG,iBAAiB,UAAU,eAAe,CAAC;AAEhI,aAAS,eAAe,YAAY,EAAE,iBAAiB,SAAS,cAAM,MAAM;AAE5E,mBAAe;AACf,sBAAU,oBAAoB;AAAA,EAChC;AAEA,MAAM,iBAAiB,MAAM;AAC3B,gBAAI,MAAM,gBAAgB;AAG1B,QAAI,OAAO,WAAW;AAEpB,UAAI,cAAM,UAAU,GAAG;AAAE;AAAA,MAAO;AAEhC,wBAAU,aAAa,kCAAkC;AAEzD,wBAAU,aAAa,kBAAkB;AACzC,wBAAU,aAAa,aAAa;AAAA,IACtC;AAGA,QAAI,OAAO,aAAa;AAEtB,eAAS,eAAe,UAAU,EAAE,cAAc,OAAO;AAAA,IAC3D;AAAA,EACF;AAEA,MAAM,qBAAqB,CAAC,QAAa,UAAe;AACtD,gBAAI,MAAM,oBAAoB;AAC9B,UAAM,iBAAiB,SAAS,eAAe,eAAe;AAC9D,sBAAU,eAAe,gBAAgB,oBAAoB,QAAQ,KAAK;AAG1E,mBAAe,QAAQ;AAEvB,aAAS,eAAe,gBAAgB,EAAE,QAAQ;AAElD,aAAS,eAAe,UAAU,EAAE,QAAQ,KAAK,eAAe,EAAE,gBAAgB,EAAE;AACpF,eAAW;AAAA,EACb;AAEA,MAAM,cAAc,CAAC,aAAkB;AACrC,gBAAI,MAAM,iCAAiC,qCAAU,QAAQ;AAC7D,UAAM,wBAAwB,SAAS,eAAe,uBAAuB;AAC7E,sBAAU,eAAe,uBAAuB,aAAa,QAAQ;AAErE,0BAAsB,QAAQ,KAAK,UAAU,QAAQ;AAAA,EACvD;AAEA,MAAO,iBAAQ;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,EACF;;;AC3GA,MAAMC,WAAU;AAChB,MAAM,cAAcA,WAAU;AAC9B,MAAM,UAAUA,WAAU;AAG1B,MAAM,gBAAgB,CAAC,WAAgB,gBAAqB;AAI1D,YAAQ,QAAQ,MAAM,IAAI,EAAE,WAAsB,YAAyB,CAAC;AAE5E,WAAO,YAAY;AAEnB,WAAO,cAAc;AAAA,EACvB;AAGA,MAAM,4BAA4B,SAAgB,GAAQ;AAAA;AACxD,QAAE,eAAe;AAEjB,YAAM,WAAW,IAAI,SAAS,SAAS,eAAe,UAAU,CAAC;AAEjE,YAAM,eAAe,KAAK,UAAU,OAAO,YAAY,QAAQ,CAAC;AAEhE,YAAM,SAAS,MAAM,YAAI,aAAa,aAAa,YAAY;AAC/D,kBAAI,MAAM,MAAM;AAEhB,UAAI,OAAQ,OAAO,cAAe,eAAe,OAAO,cAAc,MAAM;AAE1E,0BAAU,aAAa,OAAO,OAAO;AAAA,MACvC,OAAO;AAEL,sBAAc,OAAO,WAAW,OAAO,WAAW;AAClD,0BAAU,WAAW;AACrB,YAAI,UAAU,GAAG;AACf,4BAAU,iBAAiB,WAAW;AACtC,4BAAU,aAAa,CAAC,CAAC,WAAW,YAAY,CAAC,CAAC;AAAA,QACpD,OAAO;AACL,yBAAO,eAAe;AAAA,QACxB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA;AAGA,MAAM,oBAAoB,CAAC,UAAe,IAAS,YAAY,UAAU;AACvE,QAAI,cAAc,KAAK;AACvB,UAAM,cAAc,SAAS,cAAc,QAAQ;AACnD,gBAAY,cAAc;AAC1B,UAAM,iBAAiB,YAAY,WAAY;AAC7C,kBAAY,cAAc,eAAe;AACzC,UAAI,eAAe,GAAG;AAAE,sBAAc,cAAc;AAAA,MAAE;AAAA,IACxD,GAAG,GAAI;AAGP,QAAI,WAAW;AAAE,iBAAW,WAAW,EAAE;AAAA,IAAE;AAE3C,eAAW,OAAO,OAAO,EAAE;AAAA,EAC7B;AAGA,MAAM,iBAAiB,MAAM;AAE3B,YAAQ,QAAQ,MAAM,OAAO,WAAW;AAExC,YAAQ,QAAQ,MAAM,OAAO,aAAa;AAE1C,WAAO,YAAY;AAAA,EACrB;AAGA,MAAM,YAAY,CAAC,MAAM,SAAS,aAAa,OAAO,OAAO;AAE7D,MAAM,kBAAkB,CAAC,MAAM,SAAS;AAEtC,kBAAQ,OAAO;AAGf,WAAQ,GAAGA,6BAA4B,OAAS,GAAGA,6BAA4B;AAAA,EACjF;AAEA,MAAM,iBAAiB,SAAgB,OAAY;AAAA;AACjD,UAAI,kBAAU,eAAe,aAAa,gBAAgB,KAAK,GAAG;AAAE;AAAA,MAAO;AAE3E,YAAM,SAAS,MAAM,YAAI,iBAAiB,aAAa,KAAK;AAC5D,kBAAI,MAAM,6BAA6B,MAAM;AAC7C,UAAI,QAAQ;AACV,uBAAO,eAAe;AACtB;AAAA,MACF;AAEA,qBAAe;AACf,gBAAU;AAAA,IACZ;AAAA;AAEA,MAAM,wBAAwB,CAAC,WAAgB,gBAAqB;AAClE,gBAAI,MAAM,sCAAsC,cAAc,aAAa;AAC3E,sBAAU,WAAW;AACrB,kBAAc,WAAW,WAAW;AAEpC,sBAAU,aAAa,iEAAiE;AACxF,sBAAU,aAAa,kBAAkB;AAGzC,WAAO,mBAAmB,CAAC,QAAQ,UAAU;AAE3C,eAAS,MAAM,eAAe;AAE9B,aAAO,KAAK,OAAO,OAAO,KAAK;AAAA,IACjC;AAEA,aAAS,eAAe,cAAc,EAAE,iBAAiB,SAAS,OAAO,gBAAgB;AAEzF,sBAAkB,iBAAiB,KAAM,OAAO,gBAAgB;AAAA,EAClE;AAEA,MAAM,YAAY,MAAM;AACtB,gBAAI,MAAM,WAAW;AAErB,QAAI,UAAU,GAAG;AAAE;AAAA,IAAO;AAG1B,QAAI,OAAO,eAAe;AAAE;AAAA,IAAO;AACnC,UAAM,eAAe,SAAS,eAAe,iBAAiB;AAC9D,QAAI,kBAAU,eAAe,cAAc,SAAS,GAAG;AAAE;AAAA,IAAO;AAEhE,QAAI,gBAAgB,GAAG;AACrB,kBAAI,MAAM,iBAAiB;AAE3B,eAAS,cAAc,oBAAoB,EAAE,cAAc;AAAA,IAC7D;AACA,sBAAU,aAAa,+CAA+C;AACtE,sBAAU,aAAa,YAAY;AACnC,sBAAU,oBAAoB;AAK9B,aAAS,eAAe,WAAW,EAAE,iBAAiB,SAAS,MAAM;AACnE,iBAAW,OAAO,OAAO,GAAG;AAAA,IAC9B,CAAC;AAAA,EACH;AAIA,MAAM,oBAAoB,MAAM;AAC9B,gBAAI,MAAM,kEAAkE;AAE5E,WAAO,gBAAgB;AACvB,UAAM,YAAY,SAAS,eAAe,UAAU;AACpD,QAAI,kBAAU,eAAe,WAAW,SAAS,GAAG;AAAE;AAAA,IAAO;AAE7D,sBAAU,aAAa,iEAAiE;AACxF,sBAAU,aAAa,SAAS;AAEhC,cAAU,iBAAiB,UAAU,yBAAyB;AAAA,EAChE;AAEA,MAAM,SAAS,MAAM;AACnB,mBAAe;AAEf,sBAAU,WAAW,OAAO,MAAM;AAElC,sBAAU,aAAa,aAAa;AACpC,sBAAU,aAAa,mBAAmB;AAC1C,sBAAkB,kBAAkB,GAAI;AAAA,EAC1C;AAEA,MAAO,gBAAQ;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;;;ACxLe,WAAR,iBAAmC;AAA1C;AAEE,UAAMC,WAAU;AAEhB,YAAQ,IAAI,gDAAgD;AAG5D,QAAIA,aAAY,OAAO,SAAS,MAAM;AACpC,YAAM,WAAW;AAAA,QAEf,cAAa,cAAS,cAAc,2BAA2B,MAAlD,mBAAqD;AAAA,QAElE,YAAW,cAAS,cAAc,wBAAwB,MAA/C,mBAAkD;AAAA,MAC/D;AACA,aAAO;AAAA,IACT;AAEA,UAAM,aAAa,CAAC,SAAc,CAAC,KAAK,MAAM,KAAK,KAAK;AAGxD,UAAM,YAAY,CAAC,OAAY,OAAO,YAAY,MAAM,KAAK,GAAG,UAAU,EAAE,IAAI,UAAU,CAAC;AAE3F,UAAM,aAAa,CAAC,QAAa,MAAM,KAAK,GAAG,EAAE,IAAI,SAAS;AAE9D,UAAM,aAAa,CAAC,QAAU;AAxBhC,UAAAC,KAAAC;AAwBmC,eAAAA,OAAAD,MAAA,2BAAK,WAAL,gBAAAA,IAAa,MAAM,WAAnB,gBAAAC,IAA2B,WAAU;AAAA;AAGtE,UAAM,eAAe,CAAC,cAAmB,MAAM,KAAK,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,UAAU,KAAK,CAAC;AAE5F,QAAI,gBAAgB,WAAW,SAAS,qBAAqB,MAAM,CAAC;AAGpE,UAAM,SAAS,aAAa,SAAS,iBAAiB,oCAAoC,CAAC;AAC3F,QAAI,OAAO,QAAQ;AACjB,sBAAgB,CAAC,GAAG,eAAe,GAAG,CAAC,EAAE,SAAS,OAAO,CAAC,CAAC;AAAA,IAC7D;AAGA,UAAM,aAAa,SAAS,cAAc,yBAAyB,KAAK,SAAS,cAAc,eAAe,KAAK,SAAS,cAAc,cAAc;AAGxJ,UAAM,YAAY,EAAE,YAAY,WAAW,SAAS,KAAK,SAAS,IAAI,WAAW,yCAAY,SAAS,EAAE;AAExG,WAAO,cAAc,OAAO,CAAC,SAAS,CAAC;AAAA,EACzC;;;ACnCA,MAAM,gBAAgB;AACtB,MAAM,aAAa,CAAC,CAAC,cAAc,MAAM,QAAQ;AAIjD,MAAI,iBAAiB,UAAU;AAAE,cAAU;AAAA,EAAO;AAGlD,UAAQ,QAAQ,MAAM,IAAI,CAAC,aAAa,aAAa,CAAC,EACnD,KAAK,CAAC,SAAc;AACnB,QAAI,OAAQ,KAAK,cAAe,eAAe,KAAK,cAAc,MAAM;AACtE,kBAAI,MAAM,8BAA8B,KAAK,8BAA8B,KAAK,aAAa;AAC7F,oBAAM,UAAU;AAAA,IAClB,OAAO;AACL,kBAAI,MAAM,cAAc;AAExB,aAAO,YAAY,KAAK;AAExB,aAAO,cAAc,KAAK;AAC1B,oBAAM,eAAe,KAAK,SAAS;AAAA,IACrC;AAAA,EACF,CAAC;AAEH,MAAM,iBAAiB,CAAC,UAAeC,eAAmB;AAhC1D;AAiCE,gBAAI,MAAM,qBAAqB,QAAQ;AAEvC,UAAM,SAAS,aAAa,SAAS,MAAK,cAAS,OAAT,mBAAa;AACvD,gBAAI,KAAK,WAAW,KAAK,UAAU,MAAM,GAAG;AAC5C,QAAIA,YAAW;AAEb,kBAAI,MAAM,aAAaA,iBAAgB,OAAO,YAAY;AAC1D,oBAAM,sBAAsB,OAAO,WAAW,OAAO,WAAW;AAAA,IAClE,OAAO;AACL,qBAAO,YAAY,MAAM;AAAA,IAC3B;AAAA,EACF;AAEA,MAAM,eAAe,SAAgB,OAAYA,YAAgB;AAAA;AAE/D,YAAM,QAAQ,UAAU,cAAc;AAAA,QACpC,QAAQ,EAAE,MAAa;AAAA,QACvB,MAAM;AAAA,MACR,CAAC,EACE,KAAK,CAAC,aAAkB;AACvB,YAAI;AACF,yBAAe,UAAUA,UAAS;AAAA,QACpC,SAAS,GAAP;AACA,sBAAI,MAAM,CAAC;AACX,cAAI,QAAQ,CAAC,CAAC,WAAW,2BAA2B,CAAC;AACrD,cAAI,YAAY;AACd,oBAAQ,CAAC,CAAC,SAAS,kDAAkD,CAAC;AAAA,UACxE;AACA,4BAAU,aAAa,KAAK;AAG5B,cAAI,CAAC,OAAO,WAAW;AAAE,0BAAM,kBAAkB;AAAA,UAAE;AAAA,QACrD;AAAA,MACF,CAAC;AAAA,IACL;AAAA;AAEA,MAAM,gBAAgB,WAAkB;AAAA;AAEtC,YAAM,CAAC,GAAG,IAAI,MAAM,QAAQ,KAAK,MAAM,EAAE,QAAQ,MAAM,eAAe,KAAK,CAAC;AAC5E,kBAAI,MAAM,GAAG;AAIb,aAAO,aAAa,IAAI;AAExB,YAAMA,aAAY,cAAM,UAAU,OAAO,UAAU;AAEnD,aAAO,QAAQ,IAAI;AAGnB,UAAI,cAAM,gBAAgB,OAAO,UAAU,GAAG;AAE5C,oBAAI,MAAM,8BAA8B;AACxC;AAAA,MACF,WAAW,CAACA,YAAW;AAGrB,uBAAO,mBAAmB,OAAO,YAAY,IAAI,KAAK;AAAA,MACxD;AAEA,mBAAa,OAAO,OAAOA,UAAS;AAAA,IACtC;AAAA;AAEA,gBAAc;",
  "names": ["loglevel", "authUrl", "baseUrl", "authUrl", "_a", "_b", "isAuthUrl"]
}
